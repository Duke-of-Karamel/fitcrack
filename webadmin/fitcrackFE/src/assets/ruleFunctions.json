[
    {
        "name": "Nothing",
        "sign": ":",
        "description": "Do nothing (passthrough)",
        "operands": [],
        "example": ":",
        "input": "p@ssW0rd",
        "output": "p@ssW0rd"
    },
    {
        "name": "Lowercase",
        "sign": "l",
        "description": "Lowercase all letters",
        "operands": [],
        "example": "l",
        "input": "p@ssW0rd",
        "output": "p@ssw0rd"
    },
    {
        "name": "Uppercase",
        "sign": "u",
        "description": "Uppercase all letters",
        "operands": [],
        "example": "u",
        "input": "p@ssW0rd",
        "output": "P@SSW0RD"
    },
    {
        "name": "Capitalize",
        "sign": "c",
        "description": "Capitalize the first letter and lower the rest",
        "operands": [],
        "example": "c",
        "input": "p@ssW0rd",
        "output": "P@ssw0rd"
    },
    {
        "name": "Invert Capitalize",
        "sign": "C",
        "description": "Lowercase first found character, uppercase the rest",
        "operands": [],
        "example": "C",
        "input": "p@ssW0rd",
        "output": "p@SSW0RD"
    },
    {
        "name": "Toggle Case",
        "sign": "t",
        "description": "Toggle the case of all characters in word",
        "operands": [],
        "example": "t",
        "input": "p@ssW0rd",
        "output": "P@SSw0RD"
    },
    {
        "name": "Toggle @",
        "sign": "TN",
        "description": "Toggle the case of characters at position N",
        "operands": [
            {
                "specification": "Position",
                "type": "int"
            }
        ],
        "example": "T3",
        "input": "p@ssW0rd",
        "output": "p@sSW0rd"
    },
    {
        "name": "Reverse",
        "sign": "r",
        "description": "Reverse the entire word",
        "operands": [],
        "example": "r",
        "input": "p@ssW0rd",
        "output": "dr0Wss@p"
    },
    {
        "name": "Duplicate",
        "sign": "d",
        "description": "Duplicate entire word",
        "operands": [],
        "example": "d",
        "input": "p@ssW0rd",
        "output": "p@ssW0rdp@ssW0rd"
    },
    {
        "name": "Duplicate N",
        "sign": "pN",
        "description": "Append duplicated word N times",
        "operands": [
            {
                "specification": "Number of times",
                "type": "int"
            }
        ],
        "example": "p2",
        "input": "p@ssW0rd",
        "output": "p@ssW0rdp@ssW0rdp@ssW0rd"
    },
    {
        "name": "Reflect",
        "sign": "f",
        "description": "Duplicate word reversed",
        "operands": [],
        "example": "f",
        "input": "p@ssW0rd",
        "output": "p@ssW0rddr0Wss@p"
    },
    {
        "name": "Rotate Left",
        "sign": "{",
        "description": "Rotate the word left",
        "operands": [],
        "example": "{",
        "input": "p@ssW0rd",
        "output": "@ssW0rdp"
    },
    {
        "name": "Rotate Right",
        "sign": "}",
        "description": "Rotate the word right",
        "operands": [],
        "example": "}",
        "input": "p@ssW0rd",
        "output": "dp@ssW0r"
    },
    {
        "name": "Append Character",
        "sign": "$X",
        "description": "Append character X to end",
        "operands": [
            {
                "specification": "Character to append",
                "type": "char"
            }
        ],
        "example": "$1$2",
        "input": "p@ssW0rd",
        "output": "p@ssW0rd12"
    },
    {
        "name": "Prepend Character",
        "sign": "^X",
        "description": "Prepend character X to front",
        "operands": [
            {
                "specification": "Character to prepend",
                "type": "char"
            }
        ],
        "example": "^2^1",
        "input": "p@ssW0rd",
        "output": "12p@ssW0rd"
    },
    {
        "name": "Truncate left",
        "sign": "[",
        "description": "Delete first character",
        "operands": [],
        "example": "[",
        "input": "p@ssW0rd",
        "output": "@ssW0rd"
    },
    {
        "name": "Truncate right",
        "sign": "]",
        "description": "Delete last character",
        "operands": [],
        "example": "]",
        "input": "p@ssW0rd",
        "output": "p@ssW0r"
    },
    {
        "name": "Delete @ N",
        "sign": "DN",
        "description": "Delete character at position N",
        "operands": [
            {
                "specification": "Position",
                "type": "int"
            }
        ],
        "example": "D3",
        "input": "p@ssW0rd",
        "output": "p@sW0rd"
    },
    {
        "name": "Extract range",
        "sign": "xNM",
        "description": "Extract M characters, starting at position N",
        "operands": [
            {
                "specification": "Starting position",
                "type": "int"
            },
            {
                "specification": "Number of characters to extract",
                "type": "int"
            }
        ],
        "example": "x04",
        "input": "p@ssW0rd",
        "output": "p@ss"
    },
    {
        "name": "Omit range",
        "sign": "ONM",
        "description": "Delete M characters, starting at position N",
        "operands": [
            {
                "specification": "Starting position",
                "type": "int"
            },
            {
                "specification": "Number of characters to delete",
                "type": "int"
            }
        ],
        "example": "O12",
        "input": "p@ssW0rd",
        "output": "psW0rd"
    },
    {
        "name": "Insert @ N",
        "sign": "iNX",
        "description": "Insert character X at position N",
        "operands": [
            {
                "specification": "Position",
                "type": "int"
            },
            {
                "specification": "Character to insert",
                "type": "char"
            }
        ],
        "example": "i4!",
        "input": "p@ssW0rd",
        "output": "p@ss!W0rd"
    },
    {
        "name": "Overwrite @ N",
        "sign": "oNX",
        "description": "Overwrite character at position N with X",
        "operands": [
            {
                "specification": "Position",
                "type": "int"
            },
            {
                "specification": "Character to overwrite",
                "type": "char"
            }
        ],
        "example": "o3$",
        "input": "p@ssW0rd",
        "output": "p@s$W0rd"
    },
    {
        "name": "Truncate @ N",
        "sign": "'N",
        "description": "Truncate word at position N",
        "operands": [
            {
                "specification": "Position to truncate from",
                "type": "int"
            }
        ],
        "example": "'6",
        "input": "p@ssW0rd",
        "output": "p@ssW0"
    },
    {
        "name": "Replace",
        "sign": "sXY",
        "description": "Replace all instances of X with Y",
        "operands": [
            {
                "specification": "Character to be replaced",
                "type": "char"
            },
            {
                "specification": "Replace by",
                "type": "char"
            }
        ],
        "example": "ss$",
        "input": "p@ssW0rd",
        "output": "p@$$W0rd"
    },
    {
        "name": "Purge",
        "sign": "@X",
        "description": "Purge all instances of X",
        "operands": [
            {
                "specification": "Character to be purged",
                "type": "char"
            }
        ],
        "example": "@s",
        "input": "p@ssW0rd",
        "output": "p@W0rd"
    },
    {
        "name": "Duplicate first N",
        "sign": "zN",
        "description": "Duplicate first character N times",
        "operands": [
            {
                "specification": "Number of times",
                "type": "int"
            }
        ],
        "example": "z2",
        "input": "p@ssW0rd",
        "output": "ppp@ssW0rd"
    },
    {
        "name": "Duplicate last N",
        "sign": "ZN",
        "description": "Duplicate last character N times",
        "operands": [
            {
                "specification": "Number of times",
                "type": "int"
            }
        ],
        "example": "Z2",
        "input": "p@ssW0rd",
        "output": "p@ssW0rddd"
    },
    {
        "name": "Duplicate all",
        "sign": "q",
        "description": "Duplicate every character",
        "operands": [],
        "example": "q",
        "input": "p@ssW0rd",
        "output": "pp@@ssssWW00rrdd"
    },
    {
        "name": "Extract memory",
        "sign": "XNMI",
        "description": "Insert substring of length M starting from position N of word saved to memory at position I",
        "operands": [
            {
                "specification": "Starting position to extract from",
                "type": "int"
            },
            {
                "specification": "Number of characters to extract",
                "type": "int"
            },
            {
                "specification": "Position to insert to",
                "type": "int"
            }
        ],
        "example": "lMX428",
        "input": "p@ssW0rd",
        "output": "p@ssw0rdw0"
    },
    {
        "name": "Append memory",
        "sign": "4",
        "description": "Append the word saved to memory to current word",
        "operands": [],
        "example": "uMl4",
        "input": "p@ssW0rd",
        "output": "p@ssw0rdP@SSW0RD"
    },
    {
        "name": "Prepend memory",
        "sign": "6",
        "description": "Prepend the word saved to memory to current word",
        "operands": [],
        "example": "rMr6",
        "input": "p@ssW0rd",
        "output": "dr0Wss@pp@ssW0rd"
    },
    {
        "name": "Memorize",
        "sign": "M",
        "description": "Memorize current word",
        "operands": [],
        "example": "lMuX084",
        "input": "p@ssW0rd",
        "output": "P@SSp@ssw0rdW0RD"
    },
    {
        "name": "Reject less",
        "sign": "<N",
        "description": "Reject plains if their length is greater than N",
        "operands": [
            {
                "specification": "Length",
                "type": "int"
            }
        ],
        "example": "<3",
        "input": "p@ssW0rd",
        "output": ""
    },
    {
        "name": "Reject greater",
        "sign": ">N",
        "description": "Reject plains if their length is less than N",
        "operands": [
            {
                "specification": "Length",
                "type": "int"
            }
        ],
        "example": ">7",
        "input": "p@ssW0rd",
        "output": "p@ssW0rd"
    },
    {
        "name": "Reject contain",
        "sign": "!X",
        "description": "Reject plains which contain character X",
        "operands": [
            {
                "specification": "Character",
                "type": "char"
            }
        ],
        "example": "!y",
        "input": "p@ssW0rd",
        "output": "p@ssW0rd"
    },
    {
        "name": "Reject not contain",
        "sign": "/X",
        "description": "Reject plains which do not contain character X",
        "operands": [
            {
                "specification": "Character",
                "type": "char"
            }
        ],
        "example": "/y",
        "input": "p@ssW0rd",
        "output": ""
    },
    {
        "name": "Reject equal first",
        "sign": "(X",
        "description": "Reject plains which do not start with X",
        "operands": [
            {
                "specification": "Starting character",
                "type": "char"
            }
        ],
        "example": "(p",
        "input": "p@ssW0rd",
        "output": "p@ssW0rd"
    },
    {
        "name": "Reject equal last",
        "sign": ")X",
        "description": "Reject plains which do not end with X",
        "operands": [
            {
                "specification": "Ending character",
                "type": "char"
            }
        ],
        "example": ")t",
        "input": "p@ssW0rd",
        "output": ""
    },
    {
        "name": "Reject equal at",
        "sign": "=NX",
        "description": "Reject plains which do not have character X at position N",
        "operands": [
            {
                "specification": "Position",
                "type": "int"
            },
            {
                "specification": "Character",
                "type": "char"
            }
        ],
        "example": "=50",
        "input": "p@ssW0rd",
        "output": "p@ssW0rd"
    },
    {
        "name": "Reject contains",
        "sign": "%NX",
        "description": "Reject plains which contain character X less than N times",
        "operands": [
            {
                "specification": "Number of times",
                "type": "int"
            },
            {
                "specification": "Character",
                "type": "char"
            }
        ],
        "example": "%2M",
        "input": "p@ssW0rd",
        "output": ""
        
    },
    {
        "name": "Reject contains memory",
        "sign": "Q",
        "description": "Reject plains where the memory saved matches current word",
        "operands": [],
        "example": "rMrQ",
        "input": "p@ssW0rd",
        "output": "p@ssW0rd"
    },
    {
        "name": "Swap front",
        "sign": "k",
        "description": "Swap first two characters",
        "operands": [],
        "example": "k",
        "input": "p@ssW0rd",
        "output": "@pssW0rd"
    },
    {
        "name": "Swap back",
        "sign": "K",
        "description": "Swap last two characters",
        "operands": [],
        "example": "K",
        "input": "p@ssW0rd",
        "output": "p@ssW0dr"
    },
    {
        "name": "Swap @ N",
        "sign": "*NM",
        "description": "Swap character at position N with character at position M",
        "operands": [
            {
                "specification": "Position of character to be replaced",
                "type": "int"
            },
            {
                "specification": "Position of character to replace with",
                "type": "int"
            }
        ],
        "example": "*34",
        "input": "p@ssW0rd",
        "output": "p@sWs0rd"
    },
    {
        "name": "Bitwise shift left",
        "sign": "LN",
        "description": "Bitwise shift left character @ N",
        "operands": [
            {
                "specification": "Position of character",
                "type": "int"
            }
        ],
        "example": "L2",
        "input": "p@ssW0rd",
        "output": "p@\u00e6sW0rd"
    },
    {
        "name": "Bitwise shift right",
        "sign": "RN",
        "description": "Bitwise shift right character @ N",
        "operands": [
            {
                "specification": "Position of character",
                "type": "int"
            }
        ],
        "example": "R2",
        "input": "p@ssW0rd",
        "output": "p@9sW0rd"
    },
    {
        "name": "ASCII increment",
        "sign": "+N",
        "description": "Increment character @ N by 1 ASCII value",
        "operands": [
            {
                "specification": "Position of character",
                "type": "int"
            }
        ],
        "example": "+2",
        "input": "p@ssW0rd",
        "output": "p@tsW0rd"
    },
    {
        "name": "ASCII decrement",
        "sign": "-N",
        "description": "Decrement character @ N by 1 ASCII value",
        "operands": [
            {
                "specification": "Position of character",
                "type": "int"
            }
        ],
        "example": "-1",
        "input": "p@ssW0rd",
        "output": "p?ssW0rd"
    },
    {
        "name": "Replace N + 1",
        "sign": ".N",
        "description": "Replace character @ N with value at @ N plus 1",
        "operands": [
            {
                "specification": "Position of character",
                "type": "int"
            }
        ],
        "example": ".1",
        "input": "p@ssW0rd",
        "output": "psssW0rd"
    },
    {
        "name": "Replace N - 1",
        "sign": ",N",
        "description": "Replace character @ N with value at @ N minus 1",
        "operands": [
            {
                "specification": "Position of character",
                "type": "int"
            }
        ],
        "example": ",1",
        "input": "p@ssW0rd",
        "output": "ppssW0rd"
    },
    {
        "name": "Duplicate block front",
        "sign": "yN",
        "description": "Duplicate first N characters",
        "operands": [
            {
                "specification": "Number of characters to be duplicated",
                "type": "int"
            }
        ],
        "example": "y2",
        "input": "p@ssW0rd",
        "output": "p@p@ssW0rd"
    },
    {
        "name": "Duplicate block back",
        "sign": "YN",
        "description": "Duplicate last N characters",
        "operands": [
            {
                "specification": "Number of characters to be duplicated",
                "type": "int"
            }
        ],
        "example": "Y2",
        "input": "p@ssW0rd",
        "output": "p@ssW0rdrd"
    },
    {
        "name": "Title",
        "sign": "E",
        "description": "Lower case the whole line, then upper case the first letter and every letter after a space",
        "operands": [],
        "example": "E",
        "input": "p@ssW0rd w0rld",
        "output": "P@ssw0rd W0rld"
    },
    {
        "name": "Title w/separator",
        "sign": "eX",
        "description": "Lower case the whole line, then upper case the first letter and every letter after a custom separator character",
        "operands": [
            {
                "specification": "Separator character",
                "type": "char"
            }
        ],
        "example": "e-",
        "input": "p@ssW0rd-w0rld",
        "output": "P@ssw0rd-W0rld"
    },
    {
        "name": "Title w/Nth separator",
        "sign": "3NX",
        "description": "Upper case the letter after the Nth instance of a char",
        "operands": [
            {
                "specification": "Number of instance",
                "type": "int"
            },
            {
                "specification": "Character",
                "type": "char"
            }
        ],
        "example": "30-",
        "input": "pass-word",
        "output": "pass-Word"
    }
]